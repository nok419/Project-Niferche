フェーズ1: 既存コード分析用プロンプト
Project Nifercheウェブサイトの既存コードを包括的に分析してください。Sonnet 3.7モデルを利用し、じっくり考えるモードをオンにしてください。

以下の観点からコードを分析し、リファクタリングのための洞察を提供してください：

1. 現在のフォルダ構造とアーキテクチャの全体像
2. 主要コンポーネントの特定と機能分析
3. 重複コードや非効率なパターンの特定
4. データフローと状態管理の仕組み
5. テーマやスタイリングの実装方法
6. レスポンシブ対応の状況
7. モジュール間の依存関係

分析結果は以下の形式で整理してください：
- 主な問題点とその改善の方向性
- 再利用可能なコードと廃止すべきコード
- 新しいアーキテクチャへの移行時の注意点

主な改修対象はamplifyフォルダとsrcフォルダです。
srcフォルダ内には、過去の実装コードをまとめた"oldset"フォルダと、あなたが利用可能な資料をまとめた"forclaudecode"フォルダがあります。

フェーズ2: 改修要件確認用プロンプト
Project Nifercheウェブサイトの改修要件を確認し、整理してください。Sonnet 3.7モデルを利用し、じっくり考えるモードをオンにしてください。

提供された改修要件書（claude_code_requirements.txt）を読み込み、以下の観点から要件を整理してください：

1. サイト全体の構造と各区画（Home, Project Niferche, Laboratory Alsarejia）の目的と範囲
2. データモデル（コンテンツ、ユーザー、カテゴリ/タグ）の詳細
3. UI/UXの方向性と世界観別のテーマ要件
4. 主要コンポーネント（UniversalCard, BaseLayout, NavigationSystem）の機能要件
5. 実装の優先順位とフェーズ分け

要件の曖昧な点や不足している情報を特定し、以下の形式で整理してください：
- 確定している要件の明確なリスト
- 追加の検討が必要な項目のリスト
- 技術的な実装上の懸念点や課題
srcフォルダ内には、過去の実装コードをまとめた"oldset"フォルダと、あなたが利用可能な資料をまとめた"forclaudecode"フォルダがあります。
整理結果は日本語で詳細に記述し、次のフェーズの実装計画立案のための基盤としてください。

フェーズ3: 共通コンポーネント改修用プロンプト
Project Nifercheウェブサイトの共通コンポーネントの改修を行ってください。Sonnet 3.7モデルを利用し、じっくり考えるモードをオンにしてください。

claude_code_common_components.txt に記載された仕様に基づき、以下のコア共通コンポーネントを実装してください：

1. 新しいフォルダ構造のセットアップ
2. UniversalCard コンポーネントの実装
3. BaseLayout コンポーネントの実装
4. NavigationSystem コンポーネントの実装
5. 共通のフック、ユーティリティ、コンテキストの実装

各コンポーネントは以下の点を考慮して実装してください：
- TypeScriptの型定義を厳密に行う
- 拡張性と再利用性を最大化する
- レスポンシブデザインに対応する
- アクセシビリティを考慮する
- テーマシステムと連携できるようにする
srcフォルダ内には、過去の実装コードをまとめた"oldset"フォルダと、あなたが利用可能な資料をまとめた"forclaudecode"フォルダがあります。
実装は段階的に進め、各コンポーネントごとに完成したコードを提供してください。コードはReactとTypeScriptで記述し、AWS Amplify Gen2との将来的な連携を考慮してください。


フェーズ4: デザイン要素改修用プロンプト
Project Nifercheウェブサイトのデザイン要素を改修してください。Sonnet 3.7モデルを利用し、じっくり考えるモードをオンにしてください。

claude_code_design_system.txt に記載された世界観とテーマの仕様に基づき、以下のデザイン要素を実装してください：

1. グローバルテーマシステムの構築
2. 各世界観（Hodemei, Quxe, Alsarejia, Laboratory）のテーマ定義
3. 共通のスタイルコンポーネントとユーティリティの実装
4. アニメーションとトランジションの定義
5. レスポンシブデザインのブレークポイントと振る舞いの設定

特に以下の点を考慮して実装してください：
- CSS変数またはstyled-componentsを使用した一貫したテーマシステム
- 世界観ごとの特徴を視覚的に表現するカラーパレットとタイポグラフィ
- モバイルファーストのレスポンシブアプローチ
- 将来的なデザイン変更にも柔軟に対応できる抽象化レベル

実装はコンポーネントと連携可能な形で提供し、各世界観のテーマが適用された例も示してください。
フェーズ5: ページ実装改修用プロンプト
Project Nifercheウェブサイトの具体的なページ実装を改修してください。Sonnet 3.7モデルを利用し、じっくり考えるモードをオンにしてください。

claude_code_pages_implementation.txt に記載された仕様に基づき、以下の区画のページを実装してください：

[区画名を指定: Home / Project Niferche / Laboratory Alsarejia]

この区画では以下のページを実装します：
[実装するページのリスト]

各ページは以下の点を考慮して実装してください：
- 共通コンポーネントとテーマシステムを活用する
- データの取得と表示のロジックを分離する
- ページ特有のコンポーネントを適切に構成する
- エラー状態とローディング状態を適切に処理する
- レスポンシブデザインを確実に実装する
srcフォルダ内には、過去の実装コードをまとめた"oldset"フォルダと、あなたが利用可能な資料をまとめた"forclaudecode"フォルダがあります。
実装は完全なReact/TypeScriptコンポーネントとして提供し、必要に応じてモックデータやフックも含めてください。AWSサービスとの連携ポイントも明記してください。